import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { HostScheduleEntry } from "@/lib/db/models";
import { Plus, Calendar, Users } from "lucide-react";
import { HostScheduleTable } from "./host-schedule/HostScheduleTable";
import { AutoGenerateDialog } from "./host-schedule/AutoGenerateDialog";
import { useHostSchedule } from "./host-schedule/useHostSchedule";

interface HostScheduleConfigProps {
  hostSchedule: HostScheduleEntry[];
  onChange: (hostSchedule: HostScheduleEntry[]) => void;
}

export function HostScheduleConfig({ hostSchedule, onChange }: HostScheduleConfigProps) {
  const {
    isAutoGenerateOpen,
    setIsAutoGenerateOpen,
    addEntry,
    updateEntry,
    removeEntry,
    generateSchedule
  } = useHostSchedule(hostSchedule, onChange);

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Calendar size={20} />
          Cronograma de Jantares
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="flex flex-wrap gap-2">
            <Button 
              onClick={addEntry} 
              className="flex items-center gap-1"
              type="button"
            >
              <Plus size={16} />
              Adicionar Jantar
            </Button>
            <Button 
              onClick={() => setIsAutoGenerateOpen(true)} 
              variant="outline" 
              className="flex items-center gap-1"
              type="button"
            >
              <Users size={16} />
              Gerar Lista Automaticamente
            </Button>
          </div>

          {hostSchedule.length === 0 && (
            <div className="text-center p-4 border border-dashed rounded-md">
              <div className="flex flex-col items-center gap-2">
                <Calendar size={32} className="text-muted-foreground" />
                <p className="text-sm text-muted-foreground">
                  Nenhum jantar agendado. Adicione jantares manualmente ou gere automaticamente.
                </p>
              </div>
            </div>
          )}

          {/* Tabela de cronograma de jantares */}
          {hostSchedule.length > 0 && (
            <HostScheduleTable 
              hostSchedule={hostSchedule}
              updateEntry={updateEntry}
              removeEntry={removeEntry}
            />
          )}
        </div>
      </CardContent>

      {/* Di√°logo para gerar automaticamente */}
      <AutoGenerateDialog
        open={isAutoGenerateOpen}
        onOpenChange={setIsAutoGenerateOpen}
        onGenerate={generateSchedule}
      />
    </Card>
  );
}